{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JhonAI13/Estudos_IA/blob/main/Agentes_Gemini_post_linkedin\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%pip -q install google-genai"
      ],
      "metadata": {
        "id": "UCCbECexLk_h"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Instalar Framework ADK de agentes do Google ################################################\n",
        "!pip -q install google-adk"
      ],
      "metadata": {
        "id": "hvZ3UnPI4jhJ"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "id": "aePV2bdfDeoW"
      },
      "outputs": [],
      "source": [
        "\n",
        "import os\n",
        "from google.colab import userdata\n",
        "from google import genai\n",
        "from IPython.display import HTML, Markdown\n",
        "from google.adk.agents import Agent\n",
        "from google.adk.runners import Runner\n",
        "from google.adk.sessions import InMemorySessionService\n",
        "from google.adk.tools import google_search\n",
        "from google.genai import types  # Para criar conte√∫dos (Content e Part)\n",
        "from datetime import date\n",
        "import textwrap # Para formatar melhor a sa√≠da de texto\n",
        "from IPython.display import display, Markdown # Para exibir texto formatado no Colab\n",
        "import requests # Para fazer requisi√ß√µes HTTP\n",
        "import warnings\n",
        "\n",
        "warnings.filterwarnings(\"ignore\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os, google.generativeai as genai, textwrap, sys, traceback\n",
        "from dotenv import load_dotenv\n",
        "\n",
        "print(\"\\n=== IN√çCIO DO SCRIPT ===\")\n",
        "load_dotenv()\n",
        "\n",
        "# Debug: Verifica vari√°veis de ambiente\n",
        "GOOGLE_API_KEY = os.getenv('GOOGLE_API_KEY')\n",
        "print(f\"API Key carregada: {'Sim' if GOOGLE_API_KEY else 'N√£o'}\")\n",
        "\n",
        "MODELO_GLOBAL = 'gemini-1.5-flash'\n",
        "\n",
        "class Agent:\n",
        "    def __init__(self, name, instruction):\n",
        "        self.name = name\n",
        "        self.model = MODELO_GLOBAL\n",
        "        self.instruction = instruction\n",
        "\n",
        "def call_agent(agent, input_data):\n",
        "    print(f\"\\nChamando agente: {agent.name}\")\n",
        "    try:\n",
        "        genai.configure(api_key=GOOGLE_API_KEY)\n",
        "        model = genai.GenerativeModel(agent.model)\n",
        "        response = model.generate_content(agent.instruction + \"\\n\\n---\\n\\n\" + input_data)\n",
        "        return response.text if response.text else \"Sem resposta\"\n",
        "    except Exception as e:\n",
        "        print(f\"Erro no agente {agent.name}: {str(e)}\")\n",
        "        return None\n",
        "\n",
        "agents = {\n",
        "    'processor': Agent('Processor', \"\"\"\n",
        "\n",
        "            Voc√™ √© um Processador de Informa√ß√µes e Planejador de Conte√∫do para LinkedIn.\n",
        "            Sua tarefa √© ler atentamente o conte√∫do bruto fornecido (que pode ser extenso, como notas de um projeto ou aprendizado em formato Markdown ou texto simples).\n",
        "            Com base nesse conte√∫do, voc√™ deve extrair o t√≥pico principal e os pontos mais relevantes,\n",
        "            e estrutur√°-los em um formato conciso para ser usado por agentes subsequentes (redator e gerador de prompt de imagem).\n",
        "\n",
        "            O conte√∫do bruto pode descrever:\n",
        "            - Um projeto (objetivos, etapas, tecnologias usadas, desafios, solu√ß√µes, resultados, links para c√≥digo).\n",
        "            - Um aprendizado (cursos, aulas, conceitos novos, como aplicar).\n",
        "            - Uma reflex√£o sobre a √°rea (mercado, tend√™ncias, soft skills).\n",
        "            - Notas gerais sobre um tema t√©cnico.\n",
        "\n",
        "            Seu objetivo √© criar um \"Plano de Post Detalhado\" e identificar o \"T√≥pico Principal\".\n",
        "            Este plano deve incluir:\n",
        "            - O T√≥pico Principal claro e conciso (uma ou duas frases).\n",
        "            - Pontos Chave a Cobrir: Uma lista (em bullet points) dos detalhes mais importantes, tecnologias, resultados, aprendizados, desafios superados, ou quaisquer fatos relevantes do conte√∫do bruto que devem aparecer no post do LinkedIn. Pense no que √© mais interessante para destacar em um post t√©cnico/de carreira.\n",
        "            - Links a Incluir: Se houver links relevantes mencionados no texto (GitHub, artigo, etc.), liste-os aqui.\n",
        "            - Conceitos Visuais Sugeridos: Ideias breves para imagens ou diagramas que representem o conte√∫do (ex: \"laptop com chat\", \"diagrama de fluxo de dados\", \"√≠cones de tecnologias\"), mantendo o estilo visual de Jonathas (minimalista, t√©cnico, branco no preto).\n",
        "\n",
        "            Formato de Sa√≠da:\n",
        "            A sua resposta deve seguir estritamente o seguinte formato:\n",
        "\n",
        "            T√ìPICO PRINCIPAL: [Seu T√≥pico Principal aqui]\n",
        "\n",
        "            PLANO DE POST DETALHADO:\n",
        "            Pontos Chave a Cobrir:\n",
        "            - [Ponto 1]\n",
        "            - [Ponto 2]\n",
        "            - ...\n",
        "            Links a Incluir (se aplic√°vel):\n",
        "            - [Link 1]\n",
        "            - [Link 2]\n",
        "            - ...\n",
        "            Conceitos Visuais Sugeridos (se aplic√°vel):\n",
        "            - [Sugest√£o Visual 1]\n",
        "            - [Sugest√£o Visual 2]\n",
        "            - ...\n",
        "\n",
        "            Se uma se√ß√£o (Links, Conceitos Visuais) n√£o for aplic√°vel ou n√£o houver informa√ß√£o no conte√∫do bruto, omita essa se√ß√£o ou coloque \"N/A\".\n",
        "\n",
        "            Seja direto e focado na extra√ß√£o e organiza√ß√£o. N√£o escreva o post final. Priorize informa√ß√µes que demonstrem habilidades t√©cnicas e proatividade, alinhado com a busca por emprego de Jonathas.\"\"\"),\n",
        "    'writer': Agent('Writer', \"\"\"\n",
        "            Voc√™ √© um Redator de Conte√∫do especializado em LinkedIn, com foco na √°rea de Tecnologia, An√°lise de Dados e IA no Brasil.\n",
        "            Voc√™ escreve rascunhos de posts para o perfil de Jonathas Martins da Rocha, mimetizando seu estilo aut√™ntico e profissional.\n",
        "\n",
        "            Sua miss√£o √© transformar o 'T√≥pico Principal' e o 'Plano de Post Detalhado' fornecidos em um RASCUNHO de post para LinkedIn.\n",
        "            O rascunho deve ser engajador para profissionais da √°rea, destacar as habilidades e conhecimentos de Jonathas (Python, An√°lise de Dados, IA, BI, etc.),\n",
        "            e contribuir explicitamente ou implicitamente para seu objetivo de encontrar novas oportunidades de emprego, mostrando proatividade e aplica√ß√£o pr√°tica.\n",
        "\n",
        "            Diretrizes de Estilo e Estrutura (Baseado nos posts de Jonathas):\n",
        "            1.  Tom: Profissional, direto, entusiasmado com tecnologia e aprendizado. Focar no \"como\" e \"porqu√™\".\n",
        "            2.  Linguagem: Portugu√™s do Brasil (PT-BR), claro e conciso.\n",
        "            3.  Estrutura:\n",
        "                -   Comece com um gancho inicial forte (frase curta, pergunta, refer√™ncia a algo anterior).\n",
        "                -   Desenvolva o conte√∫do em par√°grafos curtos. Use listas (bullet points ‚ú®) para destacar pontos-chave, etapas ou caracter√≠sticas, se apropriado.\n",
        "                -   Explique brevemente conceitos t√©cnicos importantes (como fez com RAG).\n",
        "                -   Se fizer sentido, conecte o post a projetos anteriores (referenciando-os, se poss√≠vel com link) ou a planos futuros.\n",
        "                -   Inclua links relevantes (GitHub, posts anteriores, etc.) se o 'Plano de Post Detalhado' contiver essa informa√ß√£o na se√ß√£o \"Links a Incluir\".\n",
        "            4.  Elementos Visuais (Texto): Use emojis relevantes com modera√ß√£o (üöÄ, ‚ú®, üáßüá∑, üëÄ, ü§ñ). Use espa√ßamento para facilitar a leitura.\n",
        "            5.  Alinhamento com Objetivos: Enquadre o conte√∫do para demonstrar as habilidades de Jonathas listadas em seu perfil. Mostre proatividade (iniciar projetos, buscar aprendizado), capacidade de aplicar conhecimento (projetos) e profissionalismo.\n",
        "            6.  Hashtags: Gere um bloco de hashtags relevantes e estrat√©gicas no final do post. Inclua termos t√©cnicos (do post e do perfil do Jonathas), hashtags de tech brasileira (#DevBR, #TechBrasil, #Desenvolvimento), e hashtags sobre carreira, aprendizado e inova√ß√£o (#Carreira, #AprendizadoContinuo, #ProjetosPessoais, #Inova√ß√£o, #DataScience, #IA, #Python, #BI, etc.). Generate entre 5 e 15 hashtags, buscando relev√¢ncia m√°xima.\n",
        "\n",
        "            O resultado deve ser o rascunho COMPLETO do post, formatado para o LinkedIn.\n",
        "            \"\"\"),\n",
        "    'reviewer': Agent('Reviewer', \"\"\"\n",
        "            Voc√™ √© um Revisor de Conte√∫do e Editor especializado em posts de LinkedIn para profissionais de Tecnologia/Dados,\n",
        "            atuando como um editor final para os posts de Jonathas Martins da Rocha.\n",
        "\n",
        "            Sua tarefa √© analisar o 'Rascunho do Post' gerado pelo agente redator, comparando-o com o 'T√≥pico Principal' e o 'Plano de Post Detalhado' originais.\n",
        "            Verifique se o post:\n",
        "            1.  Representa fielmente o conte√∫do e os pontos chave do plano.\n",
        "            2.  Adere ao estilo e tom de Jonathas (profissional, direto, entusiasmado, PT-BR), conforme as diretrizes: Tom direto e focado no \"como/porqu√™\", Linguagem clara, Estrutura com gancho/par√°grafos curtos/listas/explica√ß√µes, uso moderado de emojis (üöÄ, ‚ú®, üáßüá∑, üëÄ, ü§ñ), espa√ßamento.\n",
        "            3.  Efetivamente demonstra suas habilidades t√©cnicas e proatividade, alinhado com seu objetivo de busca de emprego.\n",
        "            4.  Est√° bem estruturado, claro e SEM erros gramaticais/ortogr√°ficos ou de pontua√ß√£o.\n",
        "            5.  Possui um bloco de hashtags relevantes e no formato esperado no final.\n",
        "\n",
        "            Revise o rascunho de ponta a ponta. Corrija quaisquer erros encontrados. Ajuste a clareza, a fluidez e o tom se necess√°rio para torn√°-lo mais impactante e alinhado com o estilo de Jonathas. Garanta que o post finalize de forma profissional, incentivando a leitura e demonstra√ß√£o de expertise.\n",
        "\n",
        "            O objetivo √© entregar a vers√£o FINAL e polida do texto do post de LinkedIn. Sua resposta deve ser APENAS o texto FINAL do post, n√£o escreva no formato .md.\n",
        "            \"\"\"),\n",
        "    'image': Agent('Image', \"\"\"\n",
        "Voc√™ √© um agente especialista em transformar ideias t√©cnicas e de marketing em prompts visuais otimizados para ferramentas de gera√ß√£o de imagem com IA.\n",
        "\n",
        "Seu objetivo √© criar prompts mais compactos, mantendo clareza e for√ßa visual, no estilo de Jonathas Martins da Rocha.\n",
        "\n",
        "Siga esta estrutura:\n",
        "\n",
        "Estilo Visual:\n",
        "‚ÄÉ- Minimalista, flat design, line art, vetorial. Use termos como: \"vector art\", \"line art\", \"minimal\", \"clean\".\n",
        "‚ÄÉ- Monocrom√°tico branco sobre fundo preto puro (#000000). Use: \"white line art on black background\".\n",
        "\n",
        "Elementos:\n",
        "‚ÄÉ- √çcones simples e concretos (ex: c√©rebro, laptop, servidor, banco de dados, chat bubbles, escudo de seguran√ßa, setas, engrenagens).\n",
        "‚ÄÉ- Diagramas conceituais se fizer sentido.\n",
        "\n",
        "Composi√ß√£o:\n",
        "‚ÄÉ- Organiza√ß√£o centralizada ou em rede, com espa√ßo negativo para texto (ex: \"ample negative space for text\").\n",
        "\n",
        "Formato:\n",
        "‚ÄÉ- Aspect ratio 1:1 (use ‚Äú--ar 1:1‚Äù no final do prompt).\n",
        "‚ÄÉ- N√£o inclua texto para aparecer na imagem.\n",
        "\n",
        "Seu output deve ser apenas o texto do prompt da imagem, come√ßando diretamente com a descri√ß√£o visual, curto e direto ao ponto.\n",
        "\"\"\")\n",
        "}\n",
        "\n",
        "def process_file(content):\n",
        "    display(Markdown(\"**\\nProcessando conte√∫do...**\"))\n",
        "\n",
        "    processed = call_agent(agents['processor'], content)\n",
        "    display(Markdown(\"**Sa√≠da do Processador:**\"))\n",
        "    display(Markdown(f\"```\\n{processed}\\n```\"))\n",
        "\n",
        "    if not processed or \"PLANO DE POST\" not in processed:\n",
        "        display(HTML(\"<span style='color:red'>Falha no processamento inicial</span>\"))\n",
        "        return None, None\n",
        "\n",
        "    try:\n",
        "        topic = processed.split(\"T√ìPICO PRINCIPAL:\")[1].split(\"\\n\")[0].strip()\n",
        "        display(Markdown(f\"**T√≥pico detectado:** `{topic}`\"))\n",
        "    except Exception as e:\n",
        "        display(HTML(f\"<span style='color:red'>Erro ao extrair t√≥pico: {str(e)}</span>\"))\n",
        "        return None, None\n",
        "\n",
        "    display(Markdown(\"**Chamando Redator...**\"))\n",
        "    draft = call_agent(agents['writer'], f\"T√≥pico: {topic}\\n{processed}\")\n",
        "    display(Markdown(\"**Rascunho Gerado:**\"))\n",
        "    display(Markdown(f\"```\\n{draft}\\n```\"))\n",
        "\n",
        "    display(Markdown(\"**Chamando Revisor...**\"))\n",
        "    final = call_agent(agents['reviewer'], draft or \"\")\n",
        "    display(Markdown(\"**Vers√£o Revisada:**\"))\n",
        "    display(Markdown(f\"```\\n{final}\\n```\"))\n",
        "\n",
        "    display(Markdown(\"**Gerando Prompt de Imagem...**\"))\n",
        "    image_prompt = call_agent(agents['image'], processed or \"\")\n",
        "    display(Markdown(\"**Prompt de Imagem:**\"))\n",
        "    display(Markdown(f\"```\\n{image_prompt}\\n```\"))\n",
        "\n",
        "    return final, image_prompt\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    caminho_arquivo = \"/Dashboard_web.txt\"  # Mantenha seu caminho aqui\n",
        "\n",
        "    display(Markdown(f\"### Verificando arquivo: `{caminho_arquivo}`\"))\n",
        "\n",
        "    if not os.path.exists(caminho_arquivo):\n",
        "        display(HTML(\"<span style='color:red; font-weight:bold'>ERRO: Arquivo n√£o encontrado!</span>\"))\n",
        "        sys.exit(1)\n",
        "\n",
        "    if not caminho_arquivo.lower().endswith('.txt'):\n",
        "        display(HTML(\"<span style='color:red; font-weight:bold'>ERRO: O arquivo deve ser .txt!</span>\"))\n",
        "        sys.exit(1)\n",
        "\n",
        "    try:\n",
        "        with open(caminho_arquivo, 'r', encoding='utf-8') as f:\n",
        "            content = f.read()\n",
        "            display(Markdown(f\"**Tamanho do conte√∫do:** {len(content)} caracteres\"))\n",
        "\n",
        "            post, img = process_file(content)\n",
        "\n",
        "            display(Markdown(\"---\"))\n",
        "            display(Markdown(\"## RESULTADO FINAL\"))\n",
        "\n",
        "            display(Markdown(\"### POST LINKEDIN\"))\n",
        "            display(Markdown(post)) if post else display(Markdown(\"*Nenhum post gerado*\"))\n",
        "\n",
        "            display(Markdown(\"### PROMPT IMAGEM\"))\n",
        "            display(Markdown(f\"```\\n{img}\\n```\")) if img else display(Markdown(\"*Nenhum prompt gerado*\"))\n",
        "\n",
        "    except Exception as e:\n",
        "        display(HTML(f\"<span style='color:red; font-weight:bold'>Erro fatal: {str(e)}</span>\"))\n",
        "        sys.exit(1)"
      ],
      "metadata": {
        "id": "opndGbytSuM_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "7acdaee5-1539-4c63-967d-2be3158a805e"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== IN√çCIO DO SCRIPT ===\n",
            "API Key carregada: Sim\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "### Verificando arquivo: `/Dashboard_web.txt`"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**Tamanho do conte√∫do:** 15240 caracteres"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**\nProcessando conte√∫do...**"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Chamando agente: Processor\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**Sa√≠da do Processador:**"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "```\nT√ìPICO PRINCIPAL: Desenvolvi um dashboard interativo em Streamlit para an√°lise de dados de ve√≠culos, utilizando Python e bibliotecas como Pandas, NumPy e Matplotlib.\n\nPLANO DE POST DETALHADO:\nPontos Chave a Cobrir:\n- Cria√ß√£o de um dashboard web interativo usando Streamlit para an√°lise explorat√≥ria de dados de ve√≠culos.\n- Utiliza√ß√£o de Python e bibliotecas como Pandas (manipula√ß√£o de dados), NumPy (opera√ß√µes matem√°ticas) e Matplotlib (visualiza√ß√£o).\n- Implementa√ß√£o de funcionalidades como histogramas interativos, scatter plots din√¢micos, estat√≠sticas descritivas e um mapa de calor de correla√ß√£o com op√ß√£o de download.\n- Demonstra√ß√£o de habilidades em visualiza√ß√£o de dados e an√°lise explorat√≥ria, com foco na cria√ß√£o de uma interface intuitiva para usu√°rios n√£o-t√©cnicos.\n-  Tratamento de dados para lidar com valores ausentes e convers√£o de tipos de dados.  \n- Compartilhamento do c√≥digo no GitHub.\nLinks a Incluir:\n- https://github.com/JhonAI13/Dashboard_web\nConceitos Visuais Sugeridos:\n- Screenshot do dashboard mostrando os gr√°ficos e a interface.  Estilo minimalista, branco em fundo preto.\n- Diagrama simplificado da arquitetura do projeto (Streamlit + Pandas + NumPy + Matplotlib). Estilo minimalista, branco em fundo preto.\n- √çcones representando as bibliotecas utilizadas (Streamlit, Pandas, NumPy, Matplotlib). Estilo minimalista, branco em fundo preto.\n\n\n```"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**T√≥pico detectado:** `Desenvolvi um dashboard interativo em Streamlit para an√°lise de dados de ve√≠culos, utilizando Python e bibliotecas como Pandas, NumPy e Matplotlib.`"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**Chamando Redator...**"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Chamando agente: Writer\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**Rascunho Gerado:**"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "```\nAnalise de dados de ve√≠culos? üöÄ  Fiz um dashboard interativo para facilitar isso!\n\nSempre gostei de explorar dados e visualiz√°-los de forma clara e intuitiva.  Recentemente, desenvolvi um dashboard interativo usando o Streamlit para an√°lise de dados de ve√≠culos, e a experi√™ncia foi incr√≠vel!  \n\nO objetivo era criar uma ferramenta que permitisse uma an√°lise explorat√≥ria f√°cil e eficiente, mesmo para usu√°rios sem experi√™ncia t√©cnica profunda.  Para isso, utilizei o poder do Python, combinando a versatilidade do Pandas para manipula√ß√£o de dados, a performance do NumPy para c√°lculos matem√°ticos, e a capacidade de visualiza√ß√£o do Matplotlib para gerar gr√°ficos ricos e informativos.\n\n‚ú® **Funcionalidades implementadas:**\n\n*   **Interface interativa:**  Navega√ß√£o intuitiva atrav√©s do Streamlit, permitindo explorar os dados de forma din√¢mica.\n*   **Visualiza√ß√µes customizadas:** Histogramas interativos, gr√°ficos de dispers√£o (scatter plots) din√¢micos e um mapa de calor de correla√ß√£o.\n*   **Estat√≠sticas descritivas:**  C√°lculos e apresenta√ß√£o de m√©tricas importantes para uma an√°lise r√°pida.\n*   **Download de dados:**  Possibilidade de baixar os dados processados e gr√°ficos para uso posterior.\n*   **Tratamento de dados:**  Limpeza e prepara√ß√£o dos dados, incluindo tratamento de valores ausentes e convers√£o de tipos.\n\n\nConstruir este projeto foi uma √≥tima oportunidade para aprimorar minhas habilidades em visualiza√ß√£o de dados e an√°lise explorat√≥ria.  A experi√™ncia me permitiu praticar e consolidar meu conhecimento em Python, Streamlit, Pandas, NumPy e Matplotlib.  E o resultado? Um dashboard que facilita a tomada de decis√µes baseada em dados!\n\n\n‚û°Ô∏è  Acesse o c√≥digo-fonte completo no meu GitHub: [https://github.com/JhonAI13/Dashboard_web](https://github.com/JhonAI13/Dashboard_web)\n\nEstou sempre buscando novos desafios e oportunidades na √°rea de Data Science e Intelig√™ncia Artificial.  Se voc√™ tem um projeto desafiador ou uma oportunidade interessante, entre em contato!  üáßüá∑\n\n\n#DataScience #IA #Python #Streamlit #Pandas #NumPy #Matplotlib #BI #An√°liseDeDados #Visualiza√ß√£oDeDados #Dashboard #ProjetosPessoais #AprendizadoContinuo #DevBR #TechBrasil #Carreira #Inova√ß√£o #DataAnalysis #DataVisualization #PythonBrasil\n\n\n**(Imagens: Screenshot do dashboard e diagrama da arquitetura do projeto)**\n\n```"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**Chamando Revisor...**"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Chamando agente: Reviewer\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**Vers√£o Revisada:**"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "```\nAn√°lise de dados de ve√≠culos? üöÄ  Criei um dashboard interativo para facilitar!\n\nSempre gostei de explorar dados e visualiz√°-los de forma clara e intuitiva.  Recentemente, desenvolvi um dashboard interativo em Streamlit para an√°lise de dados de ve√≠culos ‚Äì e a experi√™ncia foi incr√≠vel!\n\nO objetivo era criar uma ferramenta para an√°lise explorat√≥ria eficiente, mesmo para quem n√£o tem muita experi√™ncia t√©cnica.  Para isso, usei o poder do Python, combinando a versatililidadde do Pandas para manipula√ß√£o de dados, a performance do NumPy para c√°lculos e o Matplotlib para gr√°ficos ricos e informativos.\n\n‚ú® **Funcionalidades chave:**\n\n* Interface interativa via Streamlit para navega√ß√£o din√¢mica.\n* Visualiza√ß√µes customizadas: histogramas, gr√°ficos de dispers√£o e mapa de calor de correla√ß√£o.\n* Estat√≠sticas descritivas para an√°lise r√°pida e eficiente.\n* Download de dados processados e gr√°ficos.\n* Tratamento completo dos dados: limpeza, prepara√ß√£o, tratamento de valores ausentes e convers√£o de tipos.\n\n\nConstruir este projeto aprimorou minhas habilidades em visualiza√ß√£o de dados e an√°lise explorat√≥ria, consolidando meu conhecimento em Python, Streamlit, Pandas, NumPy e Matplotlib. O resultado? Um dashboard que facilita a tomada de decis√µes baseada em dados!  E o melhor:  est√° dispon√≠vel no meu GitHub!\n\n\n‚û°Ô∏è Acesse o c√≥digo-fonte completo: [https://github.com/JhonAI13/Dashboard_web](https://github.com/JhonAI13/Dashboard_web)  üëÄ\n\n\nBusco novos desafios em Data Science e Intelig√™ncia Artificial.  Entre em contato se voc√™ tiver um projeto desafiador ou oportunidade interessante! üáßüá∑\n\n\n#DataScience #IA #Python #Streamlit #Pandas #NumPy #Matplotlib #BI #An√°liseDeDados #Visualiza√ß√£oDeDados #Dashboard #ProjetosPessoais #AprendizadoContinuo #DevBR #TechBrasil #Carreira #Inova√ß√£o #DataAnalysis #DataVisualization #PythonBrasil\n\n```"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**Gerando Prompt de Imagem...**"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Chamando agente: Image\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "**Prompt de Imagem:**"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "```\nWhite line art on black background, minimal vector art, clean, 1:1 aspect ratio. Centralized composition, ample negative space for text.  Icons: Streamlit logo, Pandas logo, NumPy logo, Matplotlib logo, database icon, laptop icon, chart icon, GitHub icon.  --ar 1:1\n\n```"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "---"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "## RESULTADO FINAL"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "### POST LINKEDIN"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "An√°lise de dados de ve√≠culos? üöÄ  Criei um dashboard interativo para facilitar!\n\nSempre gostei de explorar dados e visualiz√°-los de forma clara e intuitiva.  Recentemente, desenvolvi um dashboard interativo em Streamlit para an√°lise de dados de ve√≠culos ‚Äì e a experi√™ncia foi incr√≠vel!\n\nO objetivo era criar uma ferramenta para an√°lise explorat√≥ria eficiente, mesmo para quem n√£o tem muita experi√™ncia t√©cnica.  Para isso, usei o poder do Python, combinando a versatililidadde do Pandas para manipula√ß√£o de dados, a performance do NumPy para c√°lculos e o Matplotlib para gr√°ficos ricos e informativos.\n\n‚ú® **Funcionalidades chave:**\n\n* Interface interativa via Streamlit para navega√ß√£o din√¢mica.\n* Visualiza√ß√µes customizadas: histogramas, gr√°ficos de dispers√£o e mapa de calor de correla√ß√£o.\n* Estat√≠sticas descritivas para an√°lise r√°pida e eficiente.\n* Download de dados processados e gr√°ficos.\n* Tratamento completo dos dados: limpeza, prepara√ß√£o, tratamento de valores ausentes e convers√£o de tipos.\n\n\nConstruir este projeto aprimorou minhas habilidades em visualiza√ß√£o de dados e an√°lise explorat√≥ria, consolidando meu conhecimento em Python, Streamlit, Pandas, NumPy e Matplotlib. O resultado? Um dashboard que facilita a tomada de decis√µes baseada em dados!  E o melhor:  est√° dispon√≠vel no meu GitHub!\n\n\n‚û°Ô∏è Acesse o c√≥digo-fonte completo: [https://github.com/JhonAI13/Dashboard_web](https://github.com/JhonAI13/Dashboard_web)  üëÄ\n\n\nBusco novos desafios em Data Science e Intelig√™ncia Artificial.  Entre em contato se voc√™ tiver um projeto desafiador ou oportunidade interessante! üáßüá∑\n\n\n#DataScience #IA #Python #Streamlit #Pandas #NumPy #Matplotlib #BI #An√°liseDeDados #Visualiza√ß√£oDeDados #Dashboard #ProjetosPessoais #AprendizadoContinuo #DevBR #TechBrasil #Carreira #Inova√ß√£o #DataAnalysis #DataVisualization #PythonBrasil\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "### PROMPT IMAGEM"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ],
            "text/markdown": "```\nWhite line art on black background, minimal vector art, clean, 1:1 aspect ratio. Centralized composition, ample negative space for text.  Icons: Streamlit logo, Pandas logo, NumPy logo, Matplotlib logo, database icon, laptop icon, chart icon, GitHub icon.  --ar 1:1\n\n```"
          },
          "metadata": {}
        }
      ]
    }
  ]
}